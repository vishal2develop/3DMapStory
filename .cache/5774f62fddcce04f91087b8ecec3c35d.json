{"dependencies":[{"name":"wrld.js","loc":{"line":1,"column":21}},{"name":"./story","loc":{"line":2,"column":22}},{"name":"./tracks","loc":{"line":3,"column":23}}],"generated":{"js":"const Wrld = require(\"wrld.js\")\r\nconst story = require(\"./story\")\r\nconst tracks = require(\"./tracks\")\r\n\r\nconst keys = {\r\n    wrld: \"your_wrld_api_key\",\r\n    google: \"your_google_api_key\",\r\n}\r\n\r\n//you have to get your google map api keys \r\n\r\nwindow.addEventListener(\"load\", async () => {\r\n    //const address = encodeURIComponent(\"empire state building, new york\")\r\n\r\n    //const endpoint = \"https://maps.googleapis.com/maps/api/geocode/json?\"\r\n      //  + \"key=\" + keys.google + \"&address=\" + address\r\n\r\n     //console.log(endpoint)\r\n\r\n    //const response = await fetch(endpoint)\r\n//    const lookup = await response.json()\r\n\r\n//     console.log(lookup) \r\n\t \r\n\r\n    //const { lat, lng } = story[0]\r\n\t const { lat, lng, zoom, color, seconds, image, text, time } = story[0]\r\n\r\n    const map = Wrld.map(\"map\", keys.wrld, {\r\n        center: [lat, lng],\r\n        zoom,\r\n    })\r\n\t\r\n\tif (time) {\r\n    map.themes.setTime(time)\r\n}\r\n\t\r\n\t map.on(\"initialstreamingcomplete\", () => {\r\n\t\t highlightBuildingAt(lat, lng, color,\r\n\t\t elevation => showPopup(lat, lng, image, text, elevation)\r\n\t\t )\r\n\t\t \r\n\t\t if (story.length > 1) {\r\n        setTimeout(() => showNextEvent(1), seconds * 1000)\r\n    }\r\n       \r\n    })\r\n\t\r\n\tlet highlight = null\r\n\t//If no building at specified location, remove highlight\r\n\tconst highlightBuildingAt = (lat, lng, color, onElevation) => {\r\n\t\twaitForElevation(onElevation)\r\n    if (highlight) {\r\n        highlight.remove()\r\n    }\r\n\t\r\n\thighlight=  Wrld.buildings\r\n            .buildingHighlight(\r\n                Wrld.buildings\r\n                    .buildingHighlightOptions()\r\n                    .highlightBuildingAtLocation([lat, lng])\r\n                    .color([125, 255, 125, 128]),\r\n            )\r\n            .addTo(map)\r\n\t\t\t\r\n}\r\n\r\nconst showNextEvent = index => {\r\n    const { lat, lng, zoom, degrees, color, seconds, image, text, time } = story[index]\r\n\r\n    map.setView([lat, lng], zoom, {\r\n        headingDegrees: degrees,\r\n        animate: true,\r\n        durationSeconds: 2.5,\r\n    })\r\n\r\n    setTimeout(() => {\r\n\t\t if (time) {\r\n            map.themes.setTime(time)\r\n        }\r\n        highlightBuildingAt(lat, lng, color,\r\n\t\televation => showPopup(lat, lng, image, text, elevation)\r\n\t\t)\r\n\r\n        if (story.length > index + 1) {\r\n            setTimeout(() => showNextEvent(index + 1), seconds * 1000)\r\n        }\r\n    }, 2.5 * 1000)\r\n}\r\n\r\nlet elevation = 0\r\n\r\nconst waitForElevation = onElevation => {\r\n    const listener = event => {\r\n        map.buildings.off(\"buildinginformationreceived\", listener)\r\n\r\n        const information = event.buildingHighlight.getBuildingInformation()\r\n\r\n        if (!information) {\r\n            onElevation(0)\r\n        } else {\r\n            const dimensions = information.getBuildingDimensions()\r\n            const ground = dimensions.getBaseAltitude()\r\n            const elevation = dimensions.getTopAltitude() - ground\r\n\r\n            onElevation(elevation)\r\n        }\r\n    }\r\n\r\n    map.buildings.on(\"buildinginformationreceived\", listener)\r\n}\r\n\r\nconst nextTrack = () => {\r\n    const index = Math.floor(Math.random() * tracks.length)\r\n\r\n    const audio = new Audio(document.querySelector(tracks[index]).src)\r\n    audio.addEventListener(\"ended\", () => nextTrack())\r\n    audio.play()\r\n}\r\n\r\nnextTrack()\r\n\r\nlet popup = null\r\n\r\nconst showPopup = (lat, lng, image, text, elevation) => {\r\n    const src = document.querySelector(image).src\r\n\r\n    const element1 = \"<img class='image' src='\" + src + \"' />\"\r\n    const element2 = \"<span class='text'>\" + text + \"</span>\"\r\n    const element3 = \"<div class='popup'>\" + element1 + element2 + \"</div>\"\r\n\r\n    popup = L.popup({\r\n        closeButton: false,\r\n        autoPanPaddingTopLeft: 100,\r\n        elevation: Math.max(20, elevation / 2),\r\n    })\r\n        .setLatLng(L.latLng(lat, lng))\r\n        .setContent(element3)\r\n        .openOn(map)\r\n}\r\n\r\nmap.themes.setWeather(Wrld.themes.weather.Snowy)\r\n})","map":{"mappings":[{"source":"app.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"app.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"app.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"app.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"app.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"app.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"app.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"app.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"app.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"app.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"app.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"app.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"app.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"app.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"app.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"app.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"app.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"app.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"app.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"app.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"app.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"app.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"app.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"app.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"app.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"app.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"app.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"app.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"app.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"app.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"app.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"app.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"app.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"app.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"app.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"app.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"app.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"app.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"app.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"app.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"app.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"app.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"app.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"app.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"app.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"app.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"app.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"app.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"app.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"app.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"app.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"app.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"app.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"app.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"app.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"app.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"app.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"app.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"app.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"app.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"app.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"app.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"app.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"app.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"app.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"app.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"app.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"app.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"app.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"app.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"app.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"app.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"app.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"app.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"app.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"app.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"app.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"app.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"app.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"app.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"app.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"app.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"app.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"app.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"app.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"app.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"app.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"app.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"app.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"app.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"app.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"app.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"app.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"app.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"app.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"app.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"app.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"app.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"app.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"app.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"app.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"app.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"app.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"app.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"app.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"app.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"app.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"app.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"app.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"app.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"app.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"app.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"app.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"app.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"app.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"app.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"app.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"app.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"app.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"app.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"app.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"app.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"app.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"app.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"app.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"app.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"app.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"app.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"app.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"app.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"app.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"app.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"app.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"app.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"app.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"app.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"app.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"app.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"app.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"app.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"app.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"app.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"app.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}}],"sources":{"app.js":"const Wrld = require(\"wrld.js\")\r\nconst story = require(\"./story\")\r\nconst tracks = require(\"./tracks\")\r\n\r\nconst keys = {\r\n    wrld: \"your_wrld_api_key\",\r\n    google: \"your_google_api_key\",\r\n}\r\n\r\n//you have to get your google map api keys \r\n\r\nwindow.addEventListener(\"load\", async () => {\r\n    //const address = encodeURIComponent(\"empire state building, new york\")\r\n\r\n    //const endpoint = \"https://maps.googleapis.com/maps/api/geocode/json?\"\r\n      //  + \"key=\" + keys.google + \"&address=\" + address\r\n\r\n     //console.log(endpoint)\r\n\r\n    //const response = await fetch(endpoint)\r\n//    const lookup = await response.json()\r\n\r\n//     console.log(lookup) \r\n\t \r\n\r\n    //const { lat, lng } = story[0]\r\n\t const { lat, lng, zoom, color, seconds, image, text, time } = story[0]\r\n\r\n    const map = Wrld.map(\"map\", keys.wrld, {\r\n        center: [lat, lng],\r\n        zoom,\r\n    })\r\n\t\r\n\tif (time) {\r\n    map.themes.setTime(time)\r\n}\r\n\t\r\n\t map.on(\"initialstreamingcomplete\", () => {\r\n\t\t highlightBuildingAt(lat, lng, color,\r\n\t\t elevation => showPopup(lat, lng, image, text, elevation)\r\n\t\t )\r\n\t\t \r\n\t\t if (story.length > 1) {\r\n        setTimeout(() => showNextEvent(1), seconds * 1000)\r\n    }\r\n       \r\n    })\r\n\t\r\n\tlet highlight = null\r\n\t//If no building at specified location, remove highlight\r\n\tconst highlightBuildingAt = (lat, lng, color, onElevation) => {\r\n\t\twaitForElevation(onElevation)\r\n    if (highlight) {\r\n        highlight.remove()\r\n    }\r\n\t\r\n\thighlight=  Wrld.buildings\r\n            .buildingHighlight(\r\n                Wrld.buildings\r\n                    .buildingHighlightOptions()\r\n                    .highlightBuildingAtLocation([lat, lng])\r\n                    .color([125, 255, 125, 128]),\r\n            )\r\n            .addTo(map)\r\n\t\t\t\r\n}\r\n\r\nconst showNextEvent = index => {\r\n    const { lat, lng, zoom, degrees, color, seconds, image, text, time } = story[index]\r\n\r\n    map.setView([lat, lng], zoom, {\r\n        headingDegrees: degrees,\r\n        animate: true,\r\n        durationSeconds: 2.5,\r\n    })\r\n\r\n    setTimeout(() => {\r\n\t\t if (time) {\r\n            map.themes.setTime(time)\r\n        }\r\n        highlightBuildingAt(lat, lng, color,\r\n\t\televation => showPopup(lat, lng, image, text, elevation)\r\n\t\t)\r\n\r\n        if (story.length > index + 1) {\r\n            setTimeout(() => showNextEvent(index + 1), seconds * 1000)\r\n        }\r\n    }, 2.5 * 1000)\r\n}\r\n\r\nlet elevation = 0\r\n\r\nconst waitForElevation = onElevation => {\r\n    const listener = event => {\r\n        map.buildings.off(\"buildinginformationreceived\", listener)\r\n\r\n        const information = event.buildingHighlight.getBuildingInformation()\r\n\r\n        if (!information) {\r\n            onElevation(0)\r\n        } else {\r\n            const dimensions = information.getBuildingDimensions()\r\n            const ground = dimensions.getBaseAltitude()\r\n            const elevation = dimensions.getTopAltitude() - ground\r\n\r\n            onElevation(elevation)\r\n        }\r\n    }\r\n\r\n    map.buildings.on(\"buildinginformationreceived\", listener)\r\n}\r\n\r\nconst nextTrack = () => {\r\n    const index = Math.floor(Math.random() * tracks.length)\r\n\r\n    const audio = new Audio(document.querySelector(tracks[index]).src)\r\n    audio.addEventListener(\"ended\", () => nextTrack())\r\n    audio.play()\r\n}\r\n\r\nnextTrack()\r\n\r\nlet popup = null\r\n\r\nconst showPopup = (lat, lng, image, text, elevation) => {\r\n    const src = document.querySelector(image).src\r\n\r\n    const element1 = \"<img class='image' src='\" + src + \"' />\"\r\n    const element2 = \"<span class='text'>\" + text + \"</span>\"\r\n    const element3 = \"<div class='popup'>\" + element1 + element2 + \"</div>\"\r\n\r\n    popup = L.popup({\r\n        closeButton: false,\r\n        autoPanPaddingTopLeft: 100,\r\n        elevation: Math.max(20, elevation / 2),\r\n    })\r\n        .setLatLng(L.latLng(lat, lng))\r\n        .setContent(element3)\r\n        .openOn(map)\r\n}\r\n\r\nmap.themes.setWeather(Wrld.themes.weather.Snowy)\r\n})"},"lineCount":143}},"hash":"c7069b19fcb7a0819c3d798d0a32de67","cacheData":{"env":{}}}